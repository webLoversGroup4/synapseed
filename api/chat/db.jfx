import React, { useState, useEffect } from 'react';
import {
  Container,
  Typography,
  TextField,
  Button,
  Box,
  Card,
  CardContent,
} from '@mui/material';
import { useUserState } from '../contexts/ContextProvider';

const ResearchPaperDetail = () => {
  const { currentUser } = useUserState();
  const { user_id, full_name } = currentUser;

  const [papers, setPapers] = useState([]);
  const [fileToUpload, setFileToUpload] = useState(null);
  const [fileName, setFileName] = useState('');
  const [fileDescription, setFileDescription] = useState('');

  useEffect(() => {
    fetchPapers();
  }, []);

  const fetchPapers = async () => {
    try {
      const response = await fetch('http://localhost/api/actions/papers.php');
      if (response.ok) {
        const data = await response.json();
        if (Array.isArray(data)) {
          setPapers(data);
        } else {
          console.error('Fetched data is not an array:', data);
        }
      } else {
        console.error('Failed to fetch papers');
      }
    } catch (error) {
      console.error('Error fetching papers:', error);
    }
  };

  const handleFileUpload = async () => {
    if (!fileToUpload) {
      console.error('No file selected for upload');
      return;
    }

    const formData = new FormData();
    formData.append('file', fileToUpload);
    formData.append('title', fileName);
    formData.append('description', fileDescription);

    try {
      const response = await fetch('http://localhost/api/actions/upload_paper.php', {
        method: 'POST',
        body: formData,
        headers: {
          'X-User-Id': user_id,
          'X-Full-Name': full_name,
        },
      });

      if (response.ok) {
        console.log('File uploaded successfully');
        fetchPapers();
        setFileToUpload(null);
        setFileName('');
        setFileDescription('');
      } else {
        const data = await response.json();
        throw new Error(data.error || 'Failed to upload file');
      }
    } catch (error) {
      console.error('Error uploading file:', error.message);
    }
  };

  return (
    <Container maxWidth="md" sx={{ mt: 4 }}>
      <Typography variant="h2" gutterBottom>
        Research Papers
      </Typography>

      <Box mb={4}>
        <input
          type="file"
          accept=".pdf"
          onChange={(event) => setFileToUpload(event.target.files[0])}
        />
        <TextField
          fullWidth
          label="Paper Title"
          value={fileName}
          onChange={(e) => setFileName(e.target.value)}
          margin="normal"
        />
        <TextField
          fullWidth
          label="Abstract"
          value={fileDescription}
          onChange={(e) => setFileDescription(e.target.value)}
          margin="normal"
        />
        <Button
          variant="contained"
          color="primary"
          onClick={handleFileUpload}
          sx={{ mt: 2 }}
        >
          Upload File
        </Button>
      </Box>

      {papers.map((paper) => (
        <Card key={paper.paper_id} variant="outlined" sx={{ mb: 2 }}>
          <CardContent>
            <Typography variant="h5" component="div">
              {paper.title}
            </Typography>
            <Typography color="text.secondary">
              <strong>Authors:</strong> {paper.author_name}
            </Typography>
            <Typography color="text.secondary">
              <strong>Publication Date:</strong>{' '}
              {new Date(paper.created_at).toLocaleDateString()}
            </Typography>
            <Typography variant="subtitle1" sx={{ mt: 2 }}>
              Abstract
            </Typography>
            <Typography paragraph>{paper.abstract}</Typography>
          </CardContent>
        </Card>
      ))}
    </Container>
  );
};

export default ResearchPaperDetail;
